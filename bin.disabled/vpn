#!/bin/sh
#
# Author:         suzukaze hazuki <suzukaze.hazuki2020@gmail.com>
# Filename:       vpn
# Date created:   2021-08-14 16:36
# Last modified:  2021-09-29 14:57
#
# Description:
#

CONFIG="$HOME/ntes/openvpn/houko.org.ovpn"
PID="$HOME/var/run/openvpn.pid"
INTERFACE="utun0"

if [ ! -f $CONFIG ]; then
  echo "configuration file: $CONFIG not found."
  exit 1
fi

kextstat | grep -q ".tun"
has_tun="$?"

kextstat | grep -q ".tap"
has_tap="$?"

ifconfig $INTERFACE >/dev/null 2>&1
if [ $? -eq 1 ]; then
  has_interface="no"
else
  has_interface="yes"
fi

_pid=$(cat $PID 2>/dev/null)
ps auxww | grep "$_pid" | grep openvpn 2>/dev/null | grep -v grep >/dev/null
if [ $? -eq 0 ]; then
  has_pid="yes"
else
  rm -f $PID
  has_pid="no"
fi

# Get corp password
connect() {
  sudo openvpn --script-security 2 --daemon --config $CONFIG --ping 300 --writepid $PID --route-up "/bin/chmod 644 ${PID}"
  if [ $? -ne 0 ]; then
    echo "start failed."
    rm -f "$TEMPFILE"
    exit 1
  fi
  rm -f "$TEMPFILE"
  echo "Waiting interface..."
  while [ $has_interface = "no" ]; do
    sleep 0.5
    ifconfig $INTERFACE >/dev/null 2>&1
    if [ $? -eq 1 ]; then
      has_interface="no"
    else
      has_interface="yes"
    fi
  done
  echo "all done."
}

check() {
  if [ $has_interface = "yes" ] && [ $has_pid = "no" ]; then
    echo "has interface = ${has_interface}"
    echo "has pid = ${has_pid}"
    echo "the environment might be broken!"
  fi

  if [ $has_tap != "0" ] || [ $has_tap != "0" ]; then
    echo "loading kernel extensions..."
    sudo kextload /Library/Extensions/tap.kext /Library/Extensions/tun.kext
  fi
}

toggle() {
  if [ "$has_pid" = "yes" ]; then
    echo "killing openvpn process:"
    eval "sudo kill $(cat $PID)"
  else
    echo "starting openvpn"
    connect
  fi
}

check

if [ "$1" = "status" -o "$1" = "st" ]; then
  echo "Has interface? "$has_interface
else
  toggle
fi
